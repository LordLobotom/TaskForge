@page "/ukolNew"
@using TaskForge.Models
@using TaskForge.Services
@inject IUkolService UkolService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Nový úkol - TaskForge</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1>
                    <i class="bi bi-plus-circle"></i> Nový úkol
                </h1>
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb mb-0">
                        <li class="breadcrumb-item">
                            <a href="/" class="text-decoration-none">Úkoly</a>
                        </li>
                        <li class="breadcrumb-item active">Nový úkol</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle"></i>
            <strong>Chyba:</strong> @errorMessage
            <button type="button" class="btn-close" @onclick="() => errorMessage = string.Empty"></button>
        </div>
    }

    @if (!string.IsNullOrEmpty(successMessage))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle"></i>
            <strong>Úspěch:</strong> @successMessage
            <button type="button" class="btn-close" @onclick="() => successMessage = string.Empty"></button>
        </div>
    }

    <div class="row">
        <div class="col-lg-8 col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-info-circle"></i> Základní informace
                    </h5>
                </div>
                <div class="card-body">
                    <EditForm Model="newUkol" OnValidSubmit="HandleValidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary class="text-danger" />

                        <div class="row">
                            <div class="col-md-12 mb-3">
                                <label for="popis" class="form-label">
                                    Popis úkolu <span class="text-danger">*</span>
                                </label>
                                <InputText id="popis" 
                                           class="form-control" 
                                           @bind-Value="newUkol.Popis" 
                                           placeholder="Stručný popis úkolu..." />
                                <ValidationMessage For="@(() => newUkol.Popis)" class="text-danger" />
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12 mb-3">
                                <label for="detail" class="form-label">Detail úkolu</label>
                                <InputTextArea id="detail" 
                                               class="form-control" 
                                               rows="4"
                                               @bind-Value="newUkol.Detail" 
                                               placeholder="Podrobný popis úkolu, požadavky, poznámky..." />
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="priorita" class="form-label">
                                    Priorita <span class="text-danger">*</span>
                                </label>
                                <InputSelect id="priorita" 
                                             class="form-select" 
                                             @bind-Value="newUkol.Priorita">
                                    <option value="">-- Vyberte prioritu --</option>
                                    <option value="Nízká">Nízká</option>
                                    <option value="Střední">Střední</option>
                                    <option value="Vysoká">Vysoká</option>
                                    <option value="Kritická">Kritická</option>
                                </InputSelect>
                                <ValidationMessage For="@(() => newUkol.Priorita)" class="text-danger" />
                            </div>

                            <div class="col-md-6 mb-3">
                                <label for="stav" class="form-label">
                                    Stav <span class="text-danger">*</span>
                                </label>
                                <InputSelect id="stav" 
                                             class="form-select" 
                                             @bind-Value="newUkol.Stav">
                                    <option value="">-- Vyberte stav --</option>
                                    <option value="Nový">Nový</option>
                                    <option value="V řešení">V řešení</option>
                                    <option value="Hotový">Hotový</option>
                                    <option value="Dokončeno">Dokončeno</option>
                                </InputSelect>
                                <ValidationMessage For="@(() => newUkol.Stav)" class="text-danger" />
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="firma" class="form-label">
                                    Firma <span class="text-danger">*</span>
                                </label>
                                <InputSelect id="firma" 
                                            class="form-select" 
                                            @bind-Value="selectedFirmaId">
                                    <option value="">-- Vyberte firmu --</option>
                                    @foreach (var firma in firmy)
                                    {
                                        <option value="@firma.FirmaId">@firma.Nazev</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() => newUkol.FirmaId)" class="text-danger" />
                            </div>

                            <div class="col-md-6 mb-3">
                                <label for="termin" class="form-label">Termín vyřešení</label>
                                <InputDate id="termin" 
                                           class="form-control" 
                                           @bind-Value="newUkol.TerminVyreseni" />
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="zadavatele" class="form-label">Zadavatelé</label>
                                <select id="zadavatele" 
                                        class="form-select" 
                                        multiple 
                                        @onchange="OnZadavateleChanged">
                                    @foreach (var uzivatel in availableUzivatele)
                                    {
                                        <option value="@uzivatel.UzivatelId" 
                                                selected="@selectedZadavatele.Contains(uzivatel.UzivatelId)">
                                            @uzivatel.Jmeno (@uzivatel.Firma?.Nazev)
                                        </option>
                                    }
                                </select>
                                <div class="form-text">
                                    Držte Ctrl (Cmd na Mac) a klikněte pro výběr více zadavatelů
                                </div>
                            </div>

                            <div class="col-md-6 mb-3">
                                <label for="resitele" class="form-label">Řešitelé</label>
                                <select id="resitele" 
                                        class="form-select" 
                                        multiple 
                                        @onchange="OnResiteleChanged">
                                    @foreach (var uzivatel in availableUzivatele)
                                    {
                                        <option value="@uzivatel.UzivatelId" 
                                                selected="@selectedResitele.Contains(uzivatel.UzivatelId)">
                                            @uzivatel.Jmeno (@uzivatel.Firma?.Nazev)
                                        </option>
                                    }
                                </select>
                                <div class="form-text">
                                    Držte Ctrl (Cmd na Mac) a klikněte pro výběr více řešitelů
                                </div>
                            </div>
                        </div>

                        <div class="mt-4">
                            <div class="d-flex gap-2">
                                <button type="submit" 
                                        class="btn btn-primary" 
                                        disabled="@isSubmitting">
                                    @if (isSubmitting)
                                    {
                                        <span class="spinner-border spinner-border-sm me-2"></span>
                                        <span>Vytváření...</span>
                                    }
                                    else
                                    {
                                        <i class="bi bi-check-lg me-2"></i>
                                        <span>Vytvořit úkol</span>
                                    }
                                </button>

                                <button type="button" 
                                        class="btn btn-secondary" 
                                        @onclick="GoBack"
                                        disabled="@isSubmitting">
                                    <i class="bi bi-arrow-left me-2"></i>
                                    Zpět na seznam
                                </button>

                                <button type="button" 
                                        class="btn btn-outline-secondary" 
                                        @onclick="ResetForm"
                                        disabled="@isSubmitting">
                                    <i class="bi bi-arrow-clockwise me-2"></i>
                                    Vymazat formulář
                                </button>
                            </div>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>

        <div class="col-lg-4 col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-lightbulb"></i> Nápověda
                    </h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <strong>Tipy pro vyplnění úkolu:</strong>
                        <ul>
                            <li>Popis by měl být stručný a výstižný.</li>
                            <li>Detail obsahuje všechny potřebné informace a odkazy.</li>
                            <li>Vyberte správnou prioritu, aby byl úkol řešen včas.</li>
                            <li>Přiřaďte řešitele a zadavatele podle odpovědnosti.</li>
                            <li>Termín vyřešení je doporučený, ale může být aktualizován.</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Ukol newUkol = new Ukol();
    private bool isSubmitting = false;
    private string errorMessage = string.Empty;
    private string successMessage = string.Empty;
    private string selectedFirmaId = string.Empty;
    private List<Firma> firmy = new();
    private List<Uzivatel> availableUzivatele = new();
    private List<int> selectedZadavatele = new();
    private List<int> selectedResitele = new();

    protected override async Task OnInitializedAsync()
    {
        firmy = await UkolService.GetAllFirmyAsync();
        availableUzivatele = await UkolService.GetAllUzivateleAsync();
    }

    private void OnZadavateleChanged(ChangeEventArgs e)
    {
        if (e.Value is string[] selectedValues && selectedValues.Length > 0)
        {
            selectedZadavatele = selectedValues.Select(int.Parse).ToList();
        }
        else
        {
            selectedZadavatele = new List<int>();
        }
    }

    private void OnResiteleChanged(ChangeEventArgs e)
    {
        if (e.Value is string[] selectedValues && selectedValues.Length > 0)
        {
            selectedResitele = selectedValues.Select(int.Parse).ToList();
        }
        else
        {
            selectedResitele = new List<int>();
        }
    }

    private async Task HandleValidSubmit()
    {
        isSubmitting = true;
        try
        {
            // Convert selected firma ID
            if (int.TryParse(selectedFirmaId, out int firmaId))
            {
                newUkol.FirmaId = firmaId;
            }
            else
            {
                errorMessage = "Prosím vyberte firmu.";
                isSubmitting = false;
                return;
            }

            // Create the Resitele relationships
            newUkol.Resitele = selectedResitele.Select(resitelId => new Resitel
            {
                UzivatelId = resitelId
            }).ToList();

            // Create the Zadatele relationships
            newUkol.Zadatele = selectedZadavatele.Select(zadatelId => new Zadatel
            {
                UzivatelId = zadatelId
            }).ToList();

            // Temporary fix: Set to the first available user ID
            if (availableUzivatele.Any())
            {
                newUkol.VlozilUzivatelId = availableUzivatele.First().UzivatelId;
            }
            else
            {
                errorMessage = "Nejsou k dispozici žádní uživatelé.";
                isSubmitting = false;
                return;
            }

            await UkolService.CreateUkolAsync(newUkol);
            successMessage = "Úkol byl úspěšně vytvořen.";
            ResetForm();
        }
        catch (Exception ex)
        {
            errorMessage = $"Nepodařilo se vytvořit úkol: {ex.Message}";
        }
        finally
        {
            isSubmitting = false;
        }
    }

    private void ResetForm()
    {
        newUkol = new Ukol();
        selectedZadavatele.Clear();
        selectedResitele.Clear();
        selectedFirmaId = string.Empty;
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/ukoly");
    }
}
